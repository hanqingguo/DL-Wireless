differential.grc:

This grc file simulate the use of [-1,0,1] filter to calculate differential of symbol.
The output of rrc_rx add Delay=1 because makes figure more sense, to make highest point has differential= 0. Actually, when calculate differential, suppose 3 sample in highest area is 
[0.8, 1, 0.8]. 第二个0.8 × -1 + 1 × 0 + 0.8 × 1 =0 ，这个0 对应于第二个0.8 的位置。详见没有delay的输出， 与[-1,0,1]filter 的输出对比。

FIR_taps.grc:

理解FIR原理。
输入信号 input = [1+0j, 0-1j, 0+1j, -1+0j]
real   : [1, 0, 0, -1]
imag   : [0, -1, 1, 0]

输入信号经过taps = [1]
real   : [1, 0, 0, -1]
imag   : [0, -1, 1, 0]

输入信号经过taps = [1+1j]
input * taps
输出信号 output = [1+1j, 1-1j, -1+1j, -1-1j]
real   : [1, 1, -1, -1]
imag   : [1, -1, 1, -1]

输入信号经过taps = [1, 1+1j]
input * 1 + input前一个symbol * 1+1j
real   : [1, 0, 0, -1]
real   : [   1, 1, -1, -1] 把最后用一个-1挪到第一位， 因为当前（第一个symbol）的前一个symbol经过1+1j后变成了-1.
两个real相加 等于
real   : [0, 1, 1, -2]

同理：
imag 相加后变成 [-1, 0, 0, 1]  

sum_symbol.grc
symbol的sample叠加

Fractional_Resampler_Delay.grc
本来在differential.grc里面， 原始信号delay 1 sample, 就会表现的像是那个点对应那个导数一样。但是，
Fractional_Resampler本身使得导数的sample提前了 3 个sample。

原始： rrc之后delay = 1 对应 导数 delay = 0
现在： rrc之后delay = 0 对应 导数 delay = -1,
			    导数现在比之前提前了3
现在： rrc之后delay = 0 对应 导数 delay = -1+3 = 2





